# *************************************************************************
# **  Copyright (c) 2022 CentraleSupélec & EDF.
# **  All rights reserved. This program and the accompanying materials
# **  are made available under the terms of the Eclipse Public License v2.0
# **  which accompanies this distribution, and is available at
# **  https://www.eclipse.org/legal/epl-v20.html
# ** 
# **  This file is part of the RiseClipse tool
# **  
# **  Contributors:
# **      Computer Science Department, CentraleSupélec
# **      EDF R&D
# **  Contacts:
# **      dominique.marcadet@centralesupelec.fr
# **      aurelie.dehouck-neveu@edf.fr
# **  Web site:
# **      https://riseclipse.github.io
# *************************************************************************

name: Build SCL Validator

# This CI workflow builds the SCL tool specificaly 
# It is called by the main workflow of the repository

on:
  workflow_call:
    inputs:
      jarPath1:
        type: string
        required: true
      jarPath2:
        type: string
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
    - name: Checkout ${{ github.event.repository.name }}
      uses: actions/checkout@v3
      with:
        path: ${{ github.event.repository.name }}

    - name: Setup Environment
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'maven'

    - name: Checkout riseclipse-developper
      uses: actions/checkout@v3
      with:
        repository: riseclipse/riseclipse-developer
        path: riseclipse-developer
        ref: master

    - name: Install P2_to_M2
      run: |
        cd riseclipse-developer/fr.centralesupelec.edf.riseclipse.developer.p2_to_m2
        mvn install

    - name: Execute build (maven package)
      run: |
        cd ${{ github.event.repository.name }}
        mvn package

    - name: Extract Maven project version
      run: |
        cd ${{ github.event.repository.name }}
        VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
        echo "::set-output name=project_version::$VERSION"
      id: get_version
    
    - uses: jungwinter/split@v2
      id: jarName
      with:
        msg: ${{ inputs.jarPath1 }}
        separator: '/'

    - name: Upload artifact 1
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.jarName.outputs._${{ steps.jarName.outputs.length }} }}-${{ steps.get_version.outputs.project_version }}.jar
        path: ${{ inputs.jarPath1 }}-${{ steps.get_version.outputs.project_version }}.jar

    - name: Upload artifact Validator SCL UI
      uses: actions/upload-artifact@v2
      with:
        name: RiseClipseValidatorSCLApplication-${{ steps.get_version.outputs.project_version }}.jar
        path: riseclipse-validator-scl2003/fr.centralesupelec.edf.riseclipse.iec61850.scl.validator.ui/target/RiseClipseValidatorSCLApplication-${{ steps.get_version.outputs.project_version }}.jar

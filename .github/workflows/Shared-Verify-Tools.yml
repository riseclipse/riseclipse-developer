# *************************************************************************
# **  Copyright (c) 2022-24 CentraleSupélec & EDF.
# **  All rights reserved. This program and the accompanying materials
# **  are made available under the terms of the Eclipse Public License v2.0
# **  which accompanies this distribution, and is available at
# **  https://www.eclipse.org/legal/epl-v20.html
# **
# **  This file is part of the RiseClipse tool
# **
# **  Contributors:
# **      Computer Science Department, CentraleSupélec
# **      EDF R&D
# **  Contacts:
# **      dominique.marcadet@centralesupelec.fr
# **      aurelie.dehouck-neveu@edf.fr
# **  Web site:
# **      https://riseclipse.github.io
# *************************************************************************

name: Verify tools

# This CI workflow builds the components or the tool of any RiseClipse tool repository and run Sonar + Unit tests
# It is called by the main workflow of the repository

on:
  workflow_call:
    inputs:
      jar_path_1:
        type: string
        required: true
      jar_path_2:
        type: string
        required: false
    secrets:
      SONAR_TOKEN:
        required: true
    outputs:
      artifact_1_name:
        description: "Name of the first artifact, originating from the 'jar_path_1' input."
        value: ${{ jobs.build.outputs.artifact_1_name }}
      artifact_2_name:
        description: "Name of the second artifact, originating from the 'jar_path_2' input. Should not be used if the 'jar_path_2' input was not provided."
        value: ${{ jobs.build.outputs.artifact_2_name }}

jobs:
  build:
    # Use a specific version to avoid unattended changes with latest
    runs-on: ubuntu-22.04
    name: Verify
    outputs:
      artifact_1_name: ${{ steps.artifacts_metadata.outputs.artifact_1_filename }}
      artifact_2_name: ${{ steps.artifacts_metadata.outputs.artifact_2_filename }}

    steps:
    - name: Checkout ${{ github.event.repository.name }}
      uses: actions/checkout@v4
      with:
        path: ${{ github.event.repository.name }}
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "17"
        cache: "maven"

    # Maven on ubuntu-22.04 is 3.8.8, Tycho wants at least 3.9
    # 2024-01-30: setup-maven still at 4.5 with node16
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.6

    - name: Checkout riseclipse-developper
      uses: actions/checkout@v4
      with:
        repository: riseclipse/riseclipse-developer
        path: riseclipse-developer
        ref: master

    - name: Install P2_to_M2
      run: |
        cd riseclipse-developer/fr.centralesupelec.edf.riseclipse.developer.p2_to_m2
        mvn install

    - name: Execute verify (mvn verify)
      run: |
        cd ${{ github.event.repository.name }}
        mvn verify

    - name: Run analysis with Sonarqube
      run: |
        cd ${{ github.event.repository.name }}
        mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.organization=riseclipse \
          -Dsonar.host.url=http://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.projectKey=riseclipse_${{ github.event.repository.name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Maven project version
      run: |
        cd ${{ github.event.repository.name }}
        VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
        echo "project_version=$VERSION" >> $GITHUB_OUTPUT
      id: get_version
      if: ${{ always() }}

    # This step is tricky but allows to keep the version in the uploaded artifacts
    - name: Get artifact name and basedir from jar path
      run: |
        ARTIFACT_1_JAR="${{ inputs.jar_path_1 }}"
        ARTIFACT_2_JAR="${{ inputs.jar_path_2 }}"
        ARTIFACT_1_NO_EXT="${ARTIFACT_1_JAR%.*}"
        ARTIFACT_2_NO_EXT="${ARTIFACT_2_JAR%.*}"
        PROJECT_VERSION="${{ steps.get_version.outputs.project_version }}"
        ARTIFACT_1_PATH="${{ github.workspace }}/${ARTIFACT_1_NO_EXT}-${PROJECT_VERSION}.jar"
        ARTIFACT_2_PATH="${{ github.workspace }}/${ARTIFACT_2_NO_EXT}-${PROJECT_VERSION}.jar"
        ARTIFACT_1_FILENAME="$(echo $(basename "$ARTIFACT_1_PATH"))"
        ARTIFACT_2_FILENAME="$(echo $(basename "$ARTIFACT_2_PATH"))"
        echo "artifact_1_path=$ARTIFACT_1_PATH" >> $GITHUB_OUTPUT
        echo "artifact_2_path=$ARTIFACT_2_PATH" >> $GITHUB_OUTPUT
        echo "artifact_1_filename=$ARTIFACT_1_FILENAME" >> $GITHUB_OUTPUT
        echo "artifact_2_filename=$ARTIFACT_2_FILENAME" >> $GITHUB_OUTPUT
      id: artifacts_metadata

    - name: Upload artifact 1
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifacts_metadata.outputs.artifact_1_filename }}
        path: ${{ steps.artifacts_metadata.outputs.artifact_1_path }}

    - name: Upload artifact 2 if exists
      if: "${{ inputs.jar_path_2 != '' }}"
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifacts_metadata.outputs.artifact_2_filename }}
        path: ${{ steps.artifacts_metadata.outputs.artifact_2_path }}
